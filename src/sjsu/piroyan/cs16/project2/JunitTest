import static org.junit.Assert.assertEquals;

import java.io.IOException;

import org.junit.Test;

public class JUnitTest {
	@Test
	public void testBFS() throws IOException {
		Maze maze = new Maze(6);
		maze.generate();
		Maze bfs = maze.solveBFS();

		assertEquals(
				"+ +-+-+-+-+-+\n" + 
				"|0|9 7 6 8|3|\n" + 
				"+ + +-+ + + +\n" + 
				"|1|1 3|5|0|1|\n" + 
				"+ +-+ + + + +\n" + 
				"|2 3|5|4|2|8|\n" + 
				"+-+ + + + + +\n" + 
				"|1|4|7|3|4 6|\n" + 
				"+ + + + +-+ +\n" + 
				"|9|5|0|2|2 9|\n" + 
				"+ + +-+ + +-+\n" + 
				"|7 6 8 0|4 5|\n" + 
				"+-+-+-+-+-+ +\n", bfs.toString());
		bfs.showPath();
		assertEquals(
				"+ +-+-+-+-+-+\n" + 
				"|#|    # #| |\n" + 
				"+ + +-+ + + +\n" + 
				"|#|   |#|#| |\n" + 
				"+ +-+ + + + +\n" + 
				"|# #| |#|#| |\n" + 
				"+-+ + + + + +\n" + 
				"| |#| |#|# #|\n" + 
				"+ + + + +-+ +\n" + 
				"| |#| |#|# #|\n" + 
				"+ + +-+ + +-+\n" + 
				"|  # # #|# #|\n" + 
				"+-+-+-+-+-+ +\n", bfs.toString());
	}

	@Test
	public void testDFS() throws IOException {
		Maze maze = new Maze(6);
		maze.generate();
		Maze dfs = maze.solveDFS();

		assertEquals(
				"+ +-+-+-+-+-+\n" + 
				"|0|    3 4| |\n" + 
				"+ + +-+ + + +\n" + 
				"|1|   |2|5| |\n" + 
				"+ +-+ + + + +\n" + 
				"|2 3| |1|6| |\n" + 
				"+-+ + + + + +\n" + 
				"| |4| |0|7 8|\n" + 
				"+ + + + +-+ +\n" + 
				"| |5| |9|0 9|\n" + 
				"+ + +-+ + +-+\n" + 
				"|  6 7 8|1 2|\n" + 
				"+-+-+-+-+-+ +\n", dfs.toString());
		dfs.showPath();
		assertEquals(
				"+ +-+-+-+-+-+\n" + 
				"|#|    # #| |\n" + 
				"+ + +-+ + + +\n" + 
				"|#|   |#|#| |\n" + 
				"+ +-+ + + + +\n" + 
				"|# #| |#|#| |\n" + 
				"+-+ + + + + +\n" + 
				"| |#| |#|# #|\n" + 
				"+ + + + +-+ +\n" + 
				"| |#| |#|# #|\n" + 
				"+ + +-+ + +-+\n" + 
				"|  # # #|# #|\n" + 
				"+-+-+-+-+-+ +\n", dfs.toString());
	}
}
